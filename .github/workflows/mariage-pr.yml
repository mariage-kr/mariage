name: Mariage PR BOT 🤖

on:
  pull_request:
    branches: [main]

jobs:
  Backend_CI:
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.pull_request.labels.*.name, '🌱 back-end') }}
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout Repository 🚚
        uses: actions/checkout@v3

      - name: Setup JDK 17 🔨
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Install & Start Redis Server 🚀
        run: |
          echo "sudo apt-get install redis-server"
          echo "sudo service redis-server start"

      - name: Create Test Setting 🔨
        run: |
          echo "spring:" >> src/test/resources/security/application-database.yml
          echo "  data:" >> src/test/resources/security/application-database.yml
          echo "    redis:" >> src/test/resources/security/application-database.yml
          echo "      host: ${{ secrets.REDIS_HOST }}" >> src/test/resources/security/application-database.yml
          echo "      port: ${{ secrets.REDIS_PORT }}" >> src/test/resources/security/application-database.yml

          echo "open:" >> src/test/resources/security/application-openWeatherMap.yml
          echo "  weather:" >> src/test/resources/security/application-openWeatherMap.yml
          echo "    q: \"${{ secrets.OPEN_WEATHER_API_Q }}\"" >> src/test/resources/security/application-openWeatherMap.yml
          echo "    lang: \"${{ secrets.OPEN_WEATHER_API_LANG }}\"" >> src/test/resources/security/application-openWeatherMap.yml
          echo "    units: \"${{ secrets.OPEN_WEATHER_API_UNITS }}\"" >> src/test/resources/security/application-openWeatherMap.yml
          echo "    key: \"${{ secrets.OPEN_WEATHER_API_KEY }}\"" >> src/test/resources/security/application-openWeatherMap.yml

          echo "url: \"${{ secrets.CLIENT_URL }}\"" >> src/test/resources/security/application-path.yml
          echo "fileDir: \"${{ secrets.STORAGE_FILEDIR }}\"" >> src/test/resources/security/application-path.yml
          echo "jwt:" >> src/test/resources/security/application-path.yml
          echo "  secret: \"${{ secrets.JWT_SECRET }}\"" >> src/test/resources/security/application-path.yml
          echo "storagePath: \"${{ secrets.STORAGE_PATH }}\"" >> src/test/resources/security/application-path.yml

          echo "${{ secrets.CREATE_STORAGE_DIR }}"

          echo "chmod +x gradlew"

      - name: Run Spring Boot Tests 🧪
        run: ./gradlew clean test

  Frontend_CI:
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.pull_request.labels.*.name, '🖼︎ front-end') }}
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout Repository 🚚
        uses: actions/checkout@v3

      - name: Setup Node.js 🔨
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
          cache-dependency-path: "**/package-lock.json"

      - name: Install Dependencies By Package.json 🏗
        run: npm ci

      - name: Jest Test ✅
        run: npm run test

      - name: Webpack Start ⭐
        env:
          CI: false
        run: npm run start

      - name: Webpack Build ⭐
        env:
          CI: false
        run: npm run build

  Send_CI_Result:
    needs: [Backend_CI, Frontend_CI]
    runs-on: ubuntu-latest
    if: ${{ needs.Backend_CI.result != 'failure' && needs.Frontend_CI.result != 'failure' }}

    steps:
      - name: Get URL 🛒
        run: |
          echo "PR_URL=https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          echo "COMMIT_URL=https://github.com/${{ github.repository }}/commit/${{ github.sha }}" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.sha }})" >> $GITHUB_ENV

      - name: Send Success Result to Discord 📩
        if: ${{ needs.backend.result == 'success' || needs.frontend.result == 'success' }}
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          color: "#48f442"
          username: "Mariage BOT 🤖"
          message: |
            [${{ env.COMMIT_MESSAGE }}] CI Result 📜
            Status : ["**Success**"]
            Pull Request : ${{ env.PR_URL }}
            Commit : ${{ env.COMMIT_URL }}

      - name: Send Failed Result to Discord 📩
        if: ${{ needs.backend.result != 'success' || needs.frontend.result != 'success' }}
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          color: "#f44242"
          username: "Mariage BOT 🤖"
          message: |
            [${{ env.COMMIT_MESSAGE }}] CI Result 📜
            Status : [**Failed**]
            Pull Request : ${{ env.PR_URL }}
            Commit : ${{ env.COMMIT_URL }}
