name: Mariage BE.BOT ðŸ¤–

on:
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout Repository ðŸšš
        uses: actions/checkout@v3

      - name: Setup JDK 17 ðŸ”¨
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Install Redis ðŸ“¦
        run: sudo apt-get install redis-server

      - name: Start Redis Server ðŸš€
        run: sudo service redis-server start

      - name: Create Test Setting ðŸ”¨
        run: |
          echo "spring:" >> src/test/resources/security/application-database.yml
          echo "  data:" >> src/test/resources/security/application-database.yml
          echo "    redis:" >> src/test/resources/security/application-database.yml
          echo "      host: ${{ secrets.REDIS_HOST }}" >> src/test/resources/security/application-database.yml
          echo "      port: ${{ secrets.REDIS_PORT }}" >> src/test/resources/security/application-database.yml

          echo "open:" >> src/test/resources/security/application-openWeatherMap.yml
          echo "  weather:" >> src/test/resources/security/application-openWeatherMap.yml
          echo "    q: \"${{ secrets.OPEN_WEATHER_API_Q }}\"" >> src/test/resources/security/application-openWeatherMap.yml
          echo "    lang: \"${{ secrets.OPEN_WEATHER_API_LANG }}\"" >> src/test/resources/security/application-openWeatherMap.yml
          echo "    units: \"${{ secrets.OPEN_WEATHER_API_UNITS }}\"" >> src/test/resources/security/application-openWeatherMap.yml
          echo "    key: \"${{ secrets.OPEN_WEATHER_API_KEY }}\"" >> src/test/resources/security/application-openWeatherMap.yml

          echo "url: \"${{ secrets.CLIENT_URL }}\"" >> src/test/resources/security/application-path.yml
          echo "fileDir: \"${{ secrets.STORAGE_FILEDIR }}\"" >> src/test/resources/security/application-path.yml
          echo "jwt:" >> src/test/resources/security/application-path.yml
          echo "  secret: \"${{ secrets.JWT_SECRET }}\"" >> src/test/resources/security/application-path.yml
          echo "storagePath: \"${{ secrets.STORAGE_PATH }}\"" >> src/test/resources/security/application-path.yml

          echo "${{ secrets.CREATE_STORAGE_DIR }}"

          echo "chmod +x gradlew"

      - name: Run Spring Boot Tests ðŸ§ª
        run: ./gradlew clean test

      - name: Get Pull Request URL ðŸ›’
        id: pr_info
        run: |
          pr_url="https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}"
          echo "::set-output name=pr_url::$pr_url"

      - name: Get Commit URL ðŸ›’
        id: commit_info
        run: |
          commit_url="https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
          echo "::set-output name=commit_url::$commit_url"

      - name: Send Result to Discord ðŸ“©
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          color: ${{ job.status == 'success' && '#48f442' || '#f44242' }}
          username: "Mariage BE.BOT ðŸ¤–"
          message: |
            Backend Pull Request[#${{ github.event.pull_request.number }}] CI Test ðŸ“œ
            Status : [**${{ job.status }}**]
            Pull Request : ${{ steps.pr_info.outputs.pr_url }}
            Commit : ${{ steps.commit_info.outputs.commit_url }}

    if: ${{ contains(github.event.pull_request.labels.*.name, 'ðŸŒ± back-end') }}
